<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14

// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram.
// Edit element properties by modifying the text in this panel.
// Edit the files in the 'palettes' directory to create your own element palettes.
// Hold down Ctrl to select multiple elements.
// Press Del to delete elements.
// Press Ctrl-c to copy an element, and to store the whole UML diagram to the system clipboard.
// Select "Custom elements &gt; New..." to create new element types.
//
// This text will be stored with each diagram;  use it for notes.</help_text><element><type>com.umlet.element.base.Class</type><coordinates><x>1800</x><y>160</y><w>220</w><h>230</h></coordinates><panel_attributes>Map
--
//TileMatrix
--
getTile(l: Location ): Tile
getTileIterator(): Iterator&lt;Tile&gt;
--
_raison d'être:_
To represent the game map.
Holds every tile.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1750</x><y>510</y><w>220</w><h>310</h></coordinates><panel_attributes>Tile
--
//+getX(): int
//+getY(): int
Terrain
Item
//+getEntity(): Entity
AreaEffect
Decal
--
delegateDraw(Graphics g)
isPassable():bool
--
_raison d'être:_
To hold and layer things
placed on the map, such
as terrain, items, etc.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1840</x><y>370</y><w>40</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes><additional_attributes>20;20;20;140</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1950</x><y>110</y><w>500</w><h>460</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>70;230;220;230;220;440;20;440;220;440;220;20;480;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2430</x><y>60</y><w>190</w><h>310</h></coordinates><panel_attributes>Model
--
Paused
--
move(v: Vector)
loadMap(fileName: String)
saveMap(fileName: String)
updateState()
delegateDraw(g: Graphics)
--
_raison d'être:_
To manage and manipulate
game elements such as
entity, map, etc.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Matt Lance
Mark Lester</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>2600</x><y>110</y><w>700</w><h>370</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>20;20;150;20;150;310;680;310;680;350</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>3190</x><y>460</y><w>200</w><h>390</h></coordinates><panel_attributes>Entity
--
Stats
Inventory
Occupation
Location
Name
EquippedItems
--
equipItem(..)
unequipItem(..)
updateLocation(Location L)
--
_raison d'être:_
 An entity is a mobile 
thing which has a specific 
location and the ability to 
relocate itself. Represents
Avatars.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2620</x><y>600</y><w>220</w><h>280</h></coordinates><panel_attributes>PassableRelationship
--
--
isPassable( e : Entity, t : Terrain)
isPassable( e : Entity, i : Item)
--
_raison d'être:_
To allow an entity
to know if it can pass
through a tile. Allow for
Entity and Tile classes not to 
be encumbered by this check.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1950</x><y>550</y><w>1260</w><h>40</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>20;20;790;20;1240;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>2700</x><y>550</y><w>40</w><h>70</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>20;20;20;50</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2280</x><y>660</y><w>160</w><h>220</h></coordinates><panel_attributes>Drawer
--

--
_getInstance()_
--
_raison d'être:_
Provides operation
for evertyhing that is
drawable.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2010</x><y>580</y><w>160</w><h>310</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Drawable
--

--
/draw(g: Graphic)/
--
_raison d'être:_
To provide interface
for everthing that is
drawable. Allows things
to draw themselves
onto the screen.
Implements visitor
design pattern.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>2150</x><y>610</y><w>150</w><h>140</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>130;120;70;120;70;40;20;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1790</x><y>990</y><w>220</w><h>280</h></coordinates><panel_attributes>Terrain
{abstract}
--
Name
--
/isPassable(e: Entity) : boolean/
--
_raison d'être:_
To represent the phyiscal
lanscape on the map. Provides
a superclass for all the
different types of terrain.
--
_implementing:_
Brennan Jones
Jason McAninley

_testing:_
Mark Lester
Matt Lance
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1880</x><y>800</y><w>40</w><h>210</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>20;20;20;190</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>2360</x><y>1000</y><w>150</w><h>320</h></coordinates><panel_attributes>Item
{abstract}
--
Name
Location

--
_raison d'être:_
To represent an 
immobile thing
with a specific
location. Provide
interface for the 
different types of
items.
--
_implementing:_
Jason McAninley
Brennan Jones

_testing:_
Mark Lester
Matt Lance</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1880</x><y>900</y><w>580</w><h>120</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>20;20;560;20;560;100</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1240</x><y>980</y><w>170</w><h>260</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
AreaEffect
--

--
/applyEffect(e: Entity)/
--
_raison d'être:_
A requirement from the
specifications. A process
that will be triggered when
an entity enters a place.
--
_implementing:_
Brennan Jones
Jason McAninley

_testing:_
Mark Lester
Matt Lance</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>720</x><y>990</y><w>190</w><h>270</h></coordinates><panel_attributes>Decal
{abstract}
--
Name
--
_raison d'être:_
Serves as eye-candy
and may represent
area effect, etc. Provides
a superclass for every type
of decal.
--
_implementing:_
Brennan Jones
Jason McAninley

_testing:_
Mark Lester
Matt Lance</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>770</x><y>900</y><w>580</w><h>110</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>20;90;20;20;560;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1310</x><y>900</y><w>610</w><h>100</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>20;80;20;20;590;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>800</x><y>870</y><w>1310</w><h>140</h></coordinates><panel_attributes>lt=.&gt;&gt;</panel_attributes><additional_attributes>20;120;20;70;1130;70;1130;120;1130;70;1290;70;1290;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>2380</x><y>920</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>20;80;20;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>2070</x><y>700</y><w>1140</w><h>260</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>1120;20;840;20;840;200;510;200;510;240;390;240;20;240</additional_attributes></element></umlet_diagram>